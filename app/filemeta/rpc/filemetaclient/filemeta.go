// Code generated by goctl. DO NOT EDIT.
// Source: filemeta.proto

package filemetaclient

import (
	"context"

	"Gopan/app/filemeta/rpc/types/filemeta"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp            = filemeta.CommonResp
	FileMeta              = filemeta.FileMeta
	GetFileMetaReq        = filemeta.GetFileMetaReq
	GetUserFileMetaReq    = filemeta.GetUserFileMetaReq
	GetUserFileMetaResp   = filemeta.GetUserFileMetaResp
	UpdataUserFileMetaReq = filemeta.UpdataUserFileMetaReq
	UserFileMeta          = filemeta.UserFileMeta

	Filemeta interface {
		GetFileMeta(ctx context.Context, in *GetFileMetaReq, opts ...grpc.CallOption) (*FileMeta, error)
		GetUserFileMeta(ctx context.Context, in *GetUserFileMetaReq, opts ...grpc.CallOption) (*GetUserFileMetaResp, error)
		UpdataUserFileMeta(ctx context.Context, in *UpdataUserFileMetaReq, opts ...grpc.CallOption) (*CommonResp, error)
	}

	defaultFilemeta struct {
		cli zrpc.Client
	}
)

func NewFilemeta(cli zrpc.Client) Filemeta {
	return &defaultFilemeta{
		cli: cli,
	}
}

func (m *defaultFilemeta) GetFileMeta(ctx context.Context, in *GetFileMetaReq, opts ...grpc.CallOption) (*FileMeta, error) {
	client := filemeta.NewFilemetaClient(m.cli.Conn())
	return client.GetFileMeta(ctx, in, opts...)
}

func (m *defaultFilemeta) GetUserFileMeta(ctx context.Context, in *GetUserFileMetaReq, opts ...grpc.CallOption) (*GetUserFileMetaResp, error) {
	client := filemeta.NewFilemetaClient(m.cli.Conn())
	return client.GetUserFileMeta(ctx, in, opts...)
}

func (m *defaultFilemeta) UpdataUserFileMeta(ctx context.Context, in *UpdataUserFileMetaReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := filemeta.NewFilemetaClient(m.cli.Conn())
	return client.UpdataUserFileMeta(ctx, in, opts...)
}
