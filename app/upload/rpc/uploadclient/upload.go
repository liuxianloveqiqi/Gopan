// Code generated by goctl. DO NOT EDIT.
// Source: upload.proto

package uploadclient

import (
	"context"

	"Gopan/app/upload/rpc/types/upload"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp    = upload.CommonResp
	UploadFileReq = upload.UploadFileReq

	Upload interface {
		UploadFile(ctx context.Context, in *UploadFileReq, opts ...grpc.CallOption) (*CommonResp, error)
	}

	defaultUpload struct {
		cli zrpc.Client
	}
)

func NewUpload(cli zrpc.Client) Upload {
	return &defaultUpload{
		cli: cli,
	}
}

func (m *defaultUpload) UploadFile(ctx context.Context, in *UploadFileReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := upload.NewUploadClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}
